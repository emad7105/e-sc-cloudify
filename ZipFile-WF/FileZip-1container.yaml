tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-docker-plugin/1.1/plugin.yaml
  - https://raw.githubusercontent.com/rawaqasha/e-sc-cloudify/master/esc_nodetypes.yaml
  
inputs:

  input-dir:
      description: >
        The dir path of the input files  
      default: '~/input'

  input-file:
      description: >
        input file for importFile1
      default: file.jpg

  docker-image: 
      description: > 
        Docker image to be used for container building
      default: 'ubuntu:14.04'

  create_image:
      description: > 
        an option to create Docker images
      default: 'True'

node_types:

  docker_container:
    derived_from: cloudify.nodes.Root
    properties:
      image_name:
        type: string
        default: { get_input: docker-image } 
      container_ID:
        type: string
        default: container

node_templates:

  host:
    type: cloudify.nodes.Compute
    properties:
      ip: localhost
      install_agent: false

  starterBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/start-inhost.sh
          inputs:
            process:
              args: [FileZip-1container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  container:
    type: docker_container
    properties:
      container_ID: container
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/container-WF.sh
          inputs:
            process:
              args: [FileZip-1container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: starterBlock

  Java:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [container, FileZip-1container, '7']
    relationships:
      - type: cloudify.relationships.depends_on
        target: container
      - type: cloudify.relationships.contained_in
        target: container

  ImportFile:
    type: importfile
    properties:
      block_description: import file
      block_name: importfile1.jar
      block_category: File Management
      service_type: block
      block_Url: 'https://github.com/WorkflowCenter-Repositories/ImportFile-Task/raw/v1.0/importfile1.jar'
      Source: { get_input: input-file }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/task-download-single.sh
          inputs:
            process:
             args: [FileZip-1container, container, get_property: [ImportFile, block_Url]]
        configure:
          implementation: scripts/get-input.sh
          inputs:
            process:
             args: [FileZip-1container, container, { get_input: input-dir }, { get_input: input-file }]
        start: 
          implementation: Caching-Corescripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip-1container, container, { get_input: input-file }]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container
      - type: cloudify.relationships.depends_on
        target: Java

  ZipFile:
    type: zipFile
    properties:
      block_description: invert the column of csv file
      block_name: filezip2.jar
      block_category: File Management
      block_Url: https://github.com/WorkflowCenter-Repositories/ZipFile-Task/raw/v1.0/filezip1.jar
      service_type: block
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/task-download-single.sh
          inputs:
            process:
             args: [FileZip-1container, container, get_property: [ZipFile, block_Url]]
        start: 
          implementation: Caching-Corescripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip-1container, container, rawa1975]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container
      - type: cloudify.relationships.depends_on
        target: Java
      - type: block_link
        target: ImportFile
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: Caching-Corescripts/datacopy.sh
              inputs:
                process:
                  args: [ImportFile/output-1, ZipFile/input-1, FileZip-1container, container]
        
  ExportFiles:
    type: exportfiles
    properties:
      block_description: export files
      block_name: exportfiles1.jar
      block_category: File Management
      block_Url: 'https://github.com/WorkflowCenter-Repositories/ExportFiles-Task/raw/v1.0/exportfiles1.jar'
      service_type: block
    relationships:
      - type: cloudify.relationships.contained_in
        target: container
      - type: block_link
        target: ZipFile
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: Caching-Corescripts/datacopy.sh
              inputs:
                process:
                  args: [ZipFile/output-1, ExportFiles/file-list, FileZip-1container, container]
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/task-download-single.sh
          inputs:
            process:
             args: [FileZip-1container, container, get_property: [ExportFiles, block_Url]]
        start: 
          implementation: Caching-Corescripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip-1container, container]

  finalBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Caching-Corescripts/image_create.sh
          inputs:
            process:
             args: [container, { get_input: create_image }]       
        configure:
          implementation: Caching-Corescripts/containers-clean.sh
          inputs:
            process:
              args: [container]
        start:
          implementation: Caching-Corescripts/final-inhost.sh
          inputs:
            process:
              args: [FileZip-1container]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: ExportFiles
